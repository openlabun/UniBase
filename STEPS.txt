Initialize the Project:

mkdir unibase
cd unibase
npm init -y
npm install mocha chai supertest --save-dev

Initialize a new Node.js project using npm:
node src/index.js

Testing the Endpoints

Store Data (POST /data)
curl -X POST http://localhost:3000/data/store \
    -H "Content-Type: application/json" \
    -d '{"table_name": "test_table", "data": {"name": "John Doe", "age": 30}}'

Store Data (POST /data/store)
macOS:

sh
Copy code
curl -X POST http://localhost:3000/data/store \
    -H "Content-Type: application/json" \
    -d '{"table_name": "test_table", "data": {"name": "John Doe", "age": 30}}'
Windows (CMD):

cmd
Copy code
curl -X POST http://localhost:3000/data/store ^
    -H "Content-Type: application/json" ^
    -d "{\"table_name\": \"test_table\", \"data\": {\"name\": \"John Doe\", \"age\": 30}}"
Expected Response:

json
Copy code
{
  "entry_id": "unique_entry_id"
}
Retrieve All Data (GET /data/
/all)
macOS:

sh
Copy code
curl -X GET http://localhost:3000/data/test_table/all
Windows (CMD):

cmd
Copy code
curl -X GET http://localhost:3000/data/test_table/all
Expected Response:

json
Copy code
{
  "data": [
    {
      "name": "John Doe",
      "age": 30,
      "entry_id": "unique_entry_id"
    }
  ]
}
Retrieve Data by Entry ID (GET /data/
/entry/
)
macOS:

sh
Copy code
curl -X GET http://localhost:3000/data/test_table/entry/unique_entry_id
Windows (CMD):

cmd
Copy code
curl -X GET http://localhost:3000/data/test_table/entry/unique_entry_id
Expected Response:

json
Copy code
{
  "data": {
    "name": "John Doe",
    "age": 30,
    "entry_id": "unique_entry_id"
  }
}
Update Data by Entry ID (PUT /data/
/update/
)
macOS:

sh
Copy code
curl -X PUT http://localhost:3000/data/test_table/update/unique_entry_id \
    -H "Content-Type: application/json" \
    -d '{"data": {"name": "Jane Doe", "age": 25}}'
Windows (CMD):

cmd
Copy code
curl -X PUT http://localhost:3000/data/test_table/update/unique_entry_id ^
    -H "Content-Type: application/json" ^
    -d "{\"data\": {\"name\": \"Jane Doe\", \"age\": 25}}"
Expected Response:

json
Copy code
{
  "status": "success"
}
Delete Data by Entry ID (DELETE /data/
/delete/
)
macOS:

sh
Copy code
curl -X DELETE http://localhost:3000/data/test_table/delete/unique_entry_id
Windows (CMD):

cmd
Copy code
curl -X DELETE http://localhost:3000/data/test_table/delete/unique_entry_id
Expected Response:

json
Copy code
{
  "status": "success"
}
Delete Table (DELETE /data/
/delete)
macOS:

sh
Copy code
curl -X DELETE http://localhost:3000/data/test_table/delete
Windows (CMD):

cmd
Copy code
curl -X DELETE http://localhost:3000/data/test_table/delete
Expected Response:

json
Copy code
{
  "status": "success"
}
